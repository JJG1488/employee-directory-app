{"version":3,"sources":["utils/API.js","components/SearchForm.jsx","components/TableHeader.jsx","components/TableRow.jsx","components/TableBody.jsx","components/Table.jsx","components/TableContainer.jsx","components/Header.jsx","components/Wrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["API","getUsers","count","axios","get","style","backgroundColor","color","marginLeft","marginRight","marginBottom","display","SearchForm","props","htmlFor","name","id","placeholder","value","searchString","onChange","handleInputChange","onClick","handleFormSubmit","handleSort","handleFormReset","TableHeader","fields","map","field","Math","random","styles","TableRow","Object","keys","values","TableBody","rows","row","minWidth","Table","TableContainer","state","employeeData","displayRows","event","target","setState","preventDefault","filter","includes","sort","rowA","rowB","nameA","toLowerCase","nameB","then","res","data","results","emp","i","last","first","email","catch","error","console","log","this","initialize","handle","Component","float","textContent","Header","Wrapper","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.683f3832.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the random user API\n\n\n\nconst API = {\n\n    getUsers: count => {\n\n        return axios.get(`https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`)\n\n    }\n\n}\n\nexport default API;","import React from \"react\";\n\nconst style = {\n    backgroundColor: \"#353b48\",\n    color: \"white\",\n    marginLeft: \"30%\",\n    marginRight: \"30%\",\n    marginBottom: \"5%\",\n    display: \"flex\",\n}\n\nfunction SearchForm(props) {\n    return (\n        <form style={style}>\n\n            <div>\n\n                <label htmlFor=\"search-field\"> Search: </label>\n                <input \n                name=\"searchString\"\n                id=\"search-field\"\n                placeholder=\"last, first\"\n                value={props.searchString}\n                onChange={props.handleInputChange} />\n\n                <button onClick={props.handleFormSubmit}>\n                    Search\n                </button>\n                <button onClick={props.handleSort}>\n                    Sort\n                </button>\n                <button onClick={props.handleFormReset}>\n                    Reset\n                </button>\n\n                \n            </div>\n        </form>\n    )\n}\n\n\nexport default SearchForm;","import React from 'react';\n\nconst style = {\nbackgroundColor: \"#353b48\",\n\n}\n\n\n\nfunction TableHeader(props) {\n    return (\n        <thead style={style} >\n            <tr>\n                {props.fields.map(field => {\n\n                    return (\n                        <th key={Math.random() * 1}>{field}</th>\n                    )\n\n                })}\n            </tr>\n        </thead>\n    )\n}\n\n\nexport default TableHeader","import React from \"react\";\n\nconst styles = {\n    backgroundColor: \"#40739e\"\n}\n\nfunction TableRow(props) {\n    return (\n\n        <tr style={styles} >\n            {\n                Object.keys(props.values).map(field => {\n\n                return (\n                    <td key={Math.random() * 1}>{props.values[field]}</td>\n\n                )\n            })\n            }\n            \n        </tr>\n    )\n}\n\nexport default TableRow;","import React from 'react';\n\nimport TableRow from './TableRow';\n\nconst style = {\n    backgroundColor: \"blue\"\n}\n\n\nfunction TableBody(props) {\n    return (\n        <tbody style={style}>\n            {props.rows.map((row) => {\n                return (\n                    <TableRow values={row} key={Math.random() * 1}/>\n                )\n            })}\n        </tbody>\n    )\n}\n\nexport default TableBody;","import React from 'react';\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\n\nconst style = {\n    backgroundColor: \"white\",\n    minWidth: \"100vw\",\n    color: \"white\"\n}\n\nfunction Table(props) {\n    const fields = Object.keys({...props.rows[0]});\n\n    return (\n        <table style={style} >\n            <TableHeader fields={fields} />\n            <TableBody rows={props.rows} />\n        </table>\n    )\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport API from '../utils/API';\nimport SearchForm from './SearchForm';\nimport Table from './Table';\n\nconst style = {\n    backgroundColor: \"#353b48\"\n}\n\n\nclass TableContainer extends Component {\n\n    state = {\n        employeeData: [],\n        displayRows: [],\n        searchString: \"\"\n    };\n\n\n\n    initialize() {\n\n        API.getUsers(40)\n\n            .then(res => {\n                let data = res.data.results.map((emp, i) => {\n                    return {\n                        id: i + 1,\n\n                        name: emp.name.last + \", \" + emp.name.first,\n\n                        email: emp.email\n                    };\n                });\n\n                this.setState({\n                    employeeData: data,\n                    displayRows: data,\n                    searchString: \"\"\n                });\n\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            displayRows: this.state.employeeData.filter(row => {\n                return (row.name.includes(this.state.searchString))\n            })\n        })\n    }\n\n    handleSort = event => {\n        event.preventDefault();\n\n        this.setState({\n            displayRows: this.state.displayRows.sort((rowA, rowB) => {\n\n                const nameA = rowA.name.toLowerCase();\n                const nameB = rowB.name.toLowerCase();\n\n                if (nameA < nameB) return -1;\n                if (nameA > nameB) return 1;\n                return 0;\n            })\n        })\n    }\n\n    handleFormReset = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            searchString: \"\",\n            displayRows: this.state.employeeData\n        }\n        )\n    }\n\n    componentDidMount() {\n        this.initialize();\n    }\n\n    render() {\n\n        return (\n            <div style={style}>\n                <SearchForm\n                searchString={this.state.searchString}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                handleSort={this.handle}\n                handleFormReset={this.handleFormReset} />\n\n                <Table rows={this.state.displayRows} />\n            </div>\n        )\n    }\n\n\n}\n\n\nexport default TableContainer;\n\n  \n","import React from \"react\";\n\nconst styles = {\n    backgroundColor: \"#353b48\",\n    float: \"auto\",\n    textContent: \"align-center\",\n    color: \"white\",\n    display: \"flex\"\n\n}\n\nfunction Header() {\n\n    return (\n        <h1 style={styles}>\n            <span style={{ marginLeft: \"30%\", marginRight: \"30%\"}} >Employee Directory</span>\n        </h1>\n    )\n}\n\nexport default Header;","import '../App.css';\nimport TableContainer from './TableContainer';\nimport React from 'react';\nimport Header from './Header';\n\n\n\nconst styles = {\n\n    backgroundColor: \"#353b48\"\n\n}\n\nfunction Wrapper() {\n\n    return (\n        <div style={styles}>\n<Header />\n\n<TableContainer />\n\n        </div>\n    )\n    \n}\n\nexport default Wrapper;","\nimport Wrapper from './components/Wrapper';\n\nfunction App() {\n\n  return (\n    <Wrapper />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}