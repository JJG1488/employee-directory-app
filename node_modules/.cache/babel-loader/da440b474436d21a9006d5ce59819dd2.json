{"ast":null,"code":"// import React, { Component } from 'react';\n// import API from '../utils/API';\n// import Table from './Table';\n// const style = {\n//     backgroundColor: \"#353b48\"\n// }\n// class TableContainer extends Component {\n//     state = {\n//         employeeData: [],\n//         displayRows: [],\n//         searchString: \"\"\n//     };\n//     initialize() {\n//         API.getUsers(40)\n//             .then(res => {\n//                 let data = res.data.results.map((emp, i) => {\n//                     return {\n//                         id: i + 1,\n//                         name: emp.name.last + \", \" + emp.name.first,\n//                         email: emp.email\n//                     };\n//                 });\n//                 this.setState({\n//                     employeeData: data,\n//                     displayRows: data,\n//                     searchString: \"\"\n//                 });\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n//     }\n//     handleInputChange = (event) => {\n//         const { name, value } = event.target;\n//         this.setState({\n//             [name]: value\n//         })\n//     }\n//     handleFormSubmit = (event) => {\n//         event.preventDefault();\n//         this.setState({\n//             displayRows: this.state.employeeData.filter(row => {\n//                 return (row.name.includes(this.state.searchString))\n//             })\n//         })\n//     }\n//     handleSort = event => {\n//         event.preventDefault();\n//         this.setState({\n//             displayRows: this.state.displayRows.sort((rowA, rowB) => {\n//                 const nameA = rowA.name.toLowerCase();\n//                 const nameB = rowB.name.toLowerCase();\n//                 if (nameA < nameB) return -1;\n//                 if (nameA > nameB) return 1;\n//                 return 0;\n//             })\n//         })\n//     }\n//     handleFormReset = (event) => {\n//         event.preventDefault();\n//         this.setState({\n//             searchString: \"\",\n//             displayRows: this.state.employeeData\n//         }\n//         )\n//     }\n//     componentDidMount() {\n//         this.initialize();\n//     }\n//     render() {\n//         return (\n//             <div style={style}>\n//                 <SearchForm\n//                 searchString={this.state.searchString}\n//                 handleInputChange={this.handleInputChange}\n//                 handleFormSubmit={this.handleFormSubmit}\n//                 handleSort={this.handle}\n//                 handleFormReset={this.handleFormReset} />\n//                 <Table rows={this.state.displayRows} />\n//             </div>\n//         )\n//     }\n// }\n// export default TableContainer;","map":{"version":3,"sources":["/Users/jamesgault/Desktop/all-repos/git-hub/projects/employee-directory-app/employee-directory-application/src/components/TableContainer.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA","sourcesContent":["// import React, { Component } from 'react';\n// import API from '../utils/API';\n// import Table from './Table';\n\n// const style = {\n//     backgroundColor: \"#353b48\"\n// }\n\n\n// class TableContainer extends Component {\n\n//     state = {\n//         employeeData: [],\n//         displayRows: [],\n//         searchString: \"\"\n//     };\n\n\n\n//     initialize() {\n\n//         API.getUsers(40)\n\n//             .then(res => {\n//                 let data = res.data.results.map((emp, i) => {\n//                     return {\n//                         id: i + 1,\n\n//                         name: emp.name.last + \", \" + emp.name.first,\n\n//                         email: emp.email\n//                     };\n//                 });\n\n//                 this.setState({\n//                     employeeData: data,\n//                     displayRows: data,\n//                     searchString: \"\"\n//                 });\n\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//             });\n\n//     }\n\n//     handleInputChange = (event) => {\n//         const { name, value } = event.target;\n\n//         this.setState({\n//             [name]: value\n//         })\n//     }\n\n//     handleFormSubmit = (event) => {\n//         event.preventDefault();\n\n//         this.setState({\n//             displayRows: this.state.employeeData.filter(row => {\n//                 return (row.name.includes(this.state.searchString))\n//             })\n//         })\n//     }\n\n//     handleSort = event => {\n//         event.preventDefault();\n\n//         this.setState({\n//             displayRows: this.state.displayRows.sort((rowA, rowB) => {\n\n//                 const nameA = rowA.name.toLowerCase();\n//                 const nameB = rowB.name.toLowerCase();\n\n//                 if (nameA < nameB) return -1;\n//                 if (nameA > nameB) return 1;\n//                 return 0;\n//             })\n//         })\n//     }\n\n//     handleFormReset = (event) => {\n//         event.preventDefault();\n\n//         this.setState({\n//             searchString: \"\",\n//             displayRows: this.state.employeeData\n//         }\n//         )\n//     }\n\n//     componentDidMount() {\n//         this.initialize();\n//     }\n\n//     render() {\n\n//         return (\n//             <div style={style}>\n//                 <SearchForm\n//                 searchString={this.state.searchString}\n//                 handleInputChange={this.handleInputChange}\n//                 handleFormSubmit={this.handleFormSubmit}\n//                 handleSort={this.handle}\n//                 handleFormReset={this.handleFormReset} />\n\n//                 <Table rows={this.state.displayRows} />\n//             </div>\n//         )\n//     }\n\n\n// }\n\n\n// export default TableContainer;\n\n  \n"]},"metadata":{},"sourceType":"module"}