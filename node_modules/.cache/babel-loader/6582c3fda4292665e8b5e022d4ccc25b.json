{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgault/Desktop/all-repos/git-hub/projects/employee-directory-app/employee-directory-application/src/components/TableContainer.jsx\";\nimport React, { Component } from 'react';\nimport API from '../utils/API';\nimport SearchForm from './SearchForm';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  backgroundColor: \"#353b48\"\n};\n\nclass TableContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employeeData: [],\n      displayRows: [],\n      searchString: \"\"\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        displayRows: this.state.employeeData.filter(row => {\n          return row.name.includes(this.state.searchString);\n        })\n      });\n    };\n\n    this.handleSort = event => {\n      event.preventDefault();\n      this.setState({\n        displayRows: this.state.displayRows.sort((rowA, rowB) => {\n          const nameA = rowA.name.toLowerCase();\n          const nameB = rowB.name.toLowerCase();\n          if (nameA < nameB) return -1;\n          if (nameA > nameB) return 1;\n          return 0;\n        })\n      });\n    };\n\n    this.handleFormReset = event => {\n      event.preventDefault();\n      this.setState({\n        searchString: \"\",\n        displayRows: this.state.employeeData\n      });\n    };\n  }\n\n  initialize() {\n    API.getUsers(40).then(res => {\n      let data = res.data.results.map((emp, i) => {\n        return {\n          id: i + 1,\n          name: emp.name.last + \", \" + emp.name.first,\n          email: emp.email\n        };\n      });\n      this.setState({\n        employeeData: data,\n        displayRows: data,\n        searchString: \"\"\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n        searchString: this.state.searchString,\n        handleInputChange: this.handleInputChange,\n        handleFormSubmit: this.handleFormSubmit,\n        handleSort: this.handle,\n        handleFormReset: this.handleFormReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        rows: this.state.displayRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TableContainer;","map":{"version":3,"sources":["/Users/jamesgault/Desktop/all-repos/git-hub/projects/employee-directory-app/employee-directory-application/src/components/TableContainer.jsx"],"names":["React","Component","API","SearchForm","Table","style","backgroundColor","TableContainer","state","employeeData","displayRows","searchString","handleInputChange","event","name","value","target","setState","handleFormSubmit","preventDefault","filter","row","includes","handleSort","sort","rowA","rowB","nameA","toLowerCase","nameB","handleFormReset","initialize","getUsers","then","res","data","results","map","emp","i","id","last","first","email","catch","error","console","log","componentDidMount","render","handle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport API from '../utils/API';\nimport SearchForm from './SearchForm';\nimport Table from './Table';\n\nconst style = {\n    backgroundColor: \"#353b48\"\n}\n\n\nclass TableContainer extends Component {\n\n    state = {\n        employeeData: [],\n        displayRows: [],\n        searchString: \"\"\n    };\n\n\n\n    initialize() {\n\n        API.getUsers(40)\n\n            .then(res => {\n                let data = res.data.results.map((emp, i) => {\n                    return {\n                        id: i + 1,\n\n                        name: emp.name.last + \", \" + emp.name.first,\n\n                        email: emp.email\n                    };\n                });\n\n                this.setState({\n                    employeeData: data,\n                    displayRows: data,\n                    searchString: \"\"\n                });\n\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n    }\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            displayRows: this.state.employeeData.filter(row => {\n                return (row.name.includes(this.state.searchString))\n            })\n        })\n    }\n\n    handleSort = event => {\n        event.preventDefault();\n\n        this.setState({\n            displayRows: this.state.displayRows.sort((rowA, rowB) => {\n\n                const nameA = rowA.name.toLowerCase();\n                const nameB = rowB.name.toLowerCase();\n\n                if (nameA < nameB) return -1;\n                if (nameA > nameB) return 1;\n                return 0;\n            })\n        })\n    }\n\n    handleFormReset = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            searchString: \"\",\n            displayRows: this.state.employeeData\n        }\n        )\n    }\n\n    componentDidMount() {\n        this.initialize();\n    }\n\n    render() {\n\n        return (\n            <div style={style}>\n                <SearchForm\n                searchString={this.state.searchString}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                handleSort={this.handle}\n                handleFormReset={this.handleFormReset} />\n\n                <Table rows={this.state.displayRows} />\n            </div>\n        )\n    }\n\n\n}\n\n\nexport default TableContainer;\n\n  \n"]},"metadata":{},"sourceType":"module"}